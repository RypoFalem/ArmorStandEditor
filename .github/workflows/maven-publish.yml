# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on: [push, pull_request]

jobs:
  compile:
    if: "!contains(github.event.head_commit.message, 'ci-skip') || !contains(github.event.head_commit.message, 'CI-SKIP') || !contains(github.event.head_commit.message, 'CI SKIP') || !contains(github.event.head_commit.message, 'ci skip') "
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17', '18']
    steps:
      # 1. Check out the current working tree
      - name: Checkout ArmorStandEditor Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # 2. Setup Java JDK
      - name: Set up JDK Environments
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'

      # 3. Setup local Maven package cache to speed up building
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      # 4. Build via Maven
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=wolfieheart_ArmorStandEditor

      #5: Create a Clean Package - and Verify it
      - name: Clean package
        run: mvn -B clean package

      - name: Clean Verify
        run: mvn -B clean verify

      #6 Upload Artifacts (Debug Purposes)
      - name: Upload Artifact for Debugging
        uses: actions/upload-artifact@v3.1.3
        with:
          name: artifact
          path: /home/runner/work/ArmorStandEditor/ArmorStandEditor/target/armorstandeditor-*-*.jar
          if-no-files-found: error
